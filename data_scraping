Map.addLayer(105.16, 16.24, 7);

var gef_merge = ee.FeatureCollection('''FILL IN FEATURECOLLECTION''');
print(gef_merge);

Map.addLayer(gef_merge, {color: 'green'}, 'gef_merge');

var modisNDVI = ee.ImageCollection('MODIS/006/MOD13Q1')
              .select('NDVI')
              .map(
                      function(img) {
                        var rescaled_NDVI = img.select('NDVI')
                                                .multiply(0.0001)
                                                .rename('NDVI_rescaled');
                        return img.addBands(rescaled_NDVI);
                   
  }
);

var ndvi_func_2000 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2000: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2001 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2001: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2002 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2002: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2003 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
      reducer: ee.Reducer.mean(),
      geometry: feature.geometry(),
      scale: 30,
      maxPixels: 1e9
    });
  return feature.set({NDVI_2003: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2004 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2004: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2005 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2005: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2006 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2006: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2007 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2007: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2008 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2008: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2009 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2009: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2010 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2010: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2011 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2011: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2012 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2012: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2013 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2013: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2014 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2014: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2015 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2015: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2016 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2016: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2017 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2017: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2018 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2018: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2019 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2019: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2020 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2020-01-01', '2020-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2020: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2021 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2021-01-01', '2021-11-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2021: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_2000 = gef_merge.map(ndvi_func_2000);
var ndvi_2001 = ndvi_2000.map(ndvi_func_2001);
var ndvi_2002 = ndvi_2001.map(ndvi_func_2002);
var ndvi_2003 = ndvi_2002.map(ndvi_func_2003);
var ndvi_2004 = ndvi_2003.map(ndvi_func_2004);
var ndvi_2005 = ndvi_2004.map(ndvi_func_2005);
var ndvi_2006 = ndvi_2005.map(ndvi_func_2006);
var ndvi_2007 = ndvi_2006.map(ndvi_func_2007);
var ndvi_2008 = ndvi_2007.map(ndvi_func_2008);
var ndvi_2009 = ndvi_2008.map(ndvi_func_2009);
var ndvi_2010 = ndvi_2009.map(ndvi_func_2010);
var ndvi_2011 = ndvi_2010.map(ndvi_func_2011);
var ndvi_2012 = ndvi_2011.map(ndvi_func_2012);
var ndvi_2013 = ndvi_2012.map(ndvi_func_2013);
var ndvi_2014 = ndvi_2013.map(ndvi_func_2014);
var ndvi_2015 = ndvi_2014.map(ndvi_func_2015);
var ndvi_2016 = ndvi_2015.map(ndvi_func_2016);
var ndvi_2017 = ndvi_2016.map(ndvi_func_2017);
var ndvi_2018 = ndvi_2017.map(ndvi_func_2018);
var ndvi_2019 = ndvi_2018.map(ndvi_func_2019);
var ndvi_2020 = ndvi_2019.map(ndvi_func_2020);
var ndvi_2021 = ndvi_2020.map(ndvi_func_2021);

Export.table.toDrive({
  collection: ndvi_2021, 
  description: 'ndvi_2021', 
  selectors: ['GEFID', 'NDVI_2000', 'NDVI_2001', 'NDVI_2002', 'NDVI_2003', 'NDVI_2004', 
  'NDVI_2005', 'NDVI_2006', 'NDVI_2007', 'NDVI_2008', 'NDVI_2009', 'NDVI_2010', 
  'NDVI_2011', 'NDVI_2012', 'NDVI_2013', 'NDVI_2014', 'NDVI_2015', 'NDVI_2016', 
  'NDVI_2017', 'NDVI_2018', 'NDVI_2019', 'NDVI_2020', 'NDVI_2021'] 
});

// Scrape nighttime lights data within each polygon.

var nighttimeLights = ee.ImageCollection('NOAA/DMSP-OLS/NIGHTTIME_LIGHTS').filter(ee.Filter.date('2000-01-01', '2020-08-07')).select('stable_lights');

var nighttimeLights_func_2000 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2000: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2001 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2001: meanDictionary.get('stable_lights')})
};


var nighttimeLights_func_2002 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2002: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2003 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2003: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2004 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2004: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2005 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2005: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2006 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2006: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2007 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2007: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2008 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2008: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2009 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2009: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2010 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2010: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2011 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2011: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2012 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2012: meanDictionary.get('stable_lights')})
};

var nighttimeLights_func_2013 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({stable_lights_2013: meanDictionary.get('stable_lights')})
};

var nighttimeLights_2000 = gef_merge.map(nighttimeLights_func_2000);
var nighttimeLights_2001 = nighttimeLights_2000.map(nighttimeLights_func_2001);
var nighttimeLights_2002 = nighttimeLights_2001.map(nighttimeLights_func_2002);
var nighttimeLights_2003 = nighttimeLights_2002.map(nighttimeLights_func_2003);
var nighttimeLights_2004 = nighttimeLights_2003.map(nighttimeLights_func_2004);
var nighttimeLights_2005 = nighttimeLights_2004.map(nighttimeLights_func_2005);
var nighttimeLights_2006 = nighttimeLights_2005.map(nighttimeLights_func_2006);
var nighttimeLights_2007 = nighttimeLights_2006.map(nighttimeLights_func_2007);
var nighttimeLights_2008 = nighttimeLights_2007.map(nighttimeLights_func_2008);
var nighttimeLights_2009 = nighttimeLights_2008.map(nighttimeLights_func_2009);
var nighttimeLights_2010 = nighttimeLights_2009.map(nighttimeLights_func_2010);
var nighttimeLights_2011 = nighttimeLights_2010.map(nighttimeLights_func_2011);
var nighttimeLights_2012 = nighttimeLights_2011.map(nighttimeLights_func_2012);
var nighttimeLights_2013 = nighttimeLights_2012.map(nighttimeLights_func_2013);
//print(nighttimeLights_2013);

Export.table.toDrive({
  collection: nighttimeLights_2013, 
  description: 'nighttimeLights_2013', 
  selectors: ['GEFID', 'stable_lights_2000', 'stable_lights_2001', 'stable_lights_2002', 'stable_lights_2003', 'stable_lights_2004', 
  'stable_lights_2005', 'stable_lights_2006', 'stable_lights_2007', 'stable_lights_2008', 'stable_lights_2009', 'stable_lights_2010', 
  'stable_lights_2011', 'stable_lights_2012', 'stable_lights_2013'] 
});

// Scrape population data within each tile.

var pop = ee.ImageCollection("CIESIN/GPWv411/GPW_Basic_Demographic_Characteristics").first().select('basic_demographic_characteristics');

var pop_func = function(feature) {
  var collection = pop;
  var clipped = collection.clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({basic_demographic_characteristics: meanDictionary.get('basic_demographic_characteristics')})
};

var pop_value = gef_merge.map(pop_func);
//print(pop_value);

Export.table.toDrive({
  collection: pop_value, 
  description: 'pop_value', 
  selectors: ['GEFID', 'basic_demographic_characteristics'] 
});

// Scrape elevation data within each tile.

var elevation_func = function(feature) {
  var collection = ee.Image('CGIAR/SRTM90_V4').select('elevation');
  var clipped = collection.clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({elevation: meanDictionary.get('elevation')})
};

var elevation = gef_merge.map(elevation_func)

Export.table.toDrive({
  collection: elevation, 
  description: 'elevation', 
  selectors: ['GEFID', 'elevation'] 
});

// Below is a couple more datasets that can be applied for polygon data.

var total_precipitation = ee.ImageCollection("ECMWF/ERA5/MONTHLY").select('total_precipitation').filter(ee.Filter.date('2000-01-01', '2020-06-01'));

var total_precipitation_func_2000 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2000: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2001 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2001: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2002 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2002: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2003 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2003: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2004 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2004: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2005 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2005: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2006 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2006: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2007 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2007: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2008 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2008: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2009 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2009: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2010 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2010: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2011 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2011: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2012 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2012: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2013 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2013: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2014 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2014: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2015 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2015: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2016 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2016: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2017 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2017: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2018 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2018: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2019 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2019: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2020 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2020-01-01', '2020-06-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2020: meanDictionary.get('total_precipitation')})
};

var total_precipitation_2000 = gef_merge.map(total_precipitation_func_2000);
var total_precipitation_2001 = total_precipitation_2000.map(total_precipitation_func_2001);
var total_precipitation_2002 = total_precipitation_2001.map(total_precipitation_func_2002);
var total_precipitation_2003 = total_precipitation_2002.map(total_precipitation_func_2003);
var total_precipitation_2004 = total_precipitation_2003.map(total_precipitation_func_2004);
var total_precipitation_2005 = total_precipitation_2004.map(total_precipitation_func_2005);
var total_precipitation_2006 = total_precipitation_2005.map(total_precipitation_func_2006);
var total_precipitation_2007 = total_precipitation_2006.map(total_precipitation_func_2007);
var total_precipitation_2008 = total_precipitation_2007.map(total_precipitation_func_2008);
var total_precipitation_2009 = total_precipitation_2008.map(total_precipitation_func_2009);
var total_precipitation_2010 = total_precipitation_2009.map(total_precipitation_func_2010);
var total_precipitation_2011 = total_precipitation_2010.map(total_precipitation_func_2011);
var total_precipitation_2012 = total_precipitation_2011.map(total_precipitation_func_2012);
var total_precipitation_2013 = total_precipitation_2012.map(total_precipitation_func_2013);
var total_precipitation_2014 = total_precipitation_2013.map(total_precipitation_func_2014);
var total_precipitation_2015 = total_precipitation_2014.map(total_precipitation_func_2015);
var total_precipitation_2016 = total_precipitation_2015.map(total_precipitation_func_2016);
//print(total_precipitation_2016);

Export.table.toDrive({
  collection: total_precipitation_2016, 
  description: 'total_precipitation_2000_2016', 
  selectors: ['GEFID', 'total_precipitation_2000', 'total_precipitation_2001','total_precipitation_2002','total_precipitation_2003',
  'total_precipitation_2004','total_precipitation_2005','total_precipitation_2006','total_precipitation_2007','total_precipitation_2008',
  'total_precipitation_2009','total_precipitation_2010','total_precipitation_2011','total_precipitation_2012','total_precipitation_2013',
  'total_precipitation_2014', 'total_precipitation_2015', 'total_precipitation_2016'] 
});

var total_precipitation_2017 = gef_merge.map(total_precipitation_func_2017);
var total_precipitation_2018 = total_precipitation_2017.map(total_precipitation_func_2018);
var total_precipitation_2019 = total_precipitation_2018.map(total_precipitation_func_2019);
var total_precipitation_2020 = total_precipitation_2019.map(total_precipitation_func_2020);
//print(total_precipitation_2020);

Export.table.toDrive({
  collection: total_precipitation_2020, 
  description: 'total_precipitation_2017_2020', 
  selectors: ['GEFID', 'total_precipitation_2017', 'total_precipitation_2018','total_precipitation_2019','total_precipitation_2020'] 
});

var mean_2m_air_temperature = ee.ImageCollection("ECMWF/ERA5/MONTHLY").select('mean_2m_air_temperature').filter(ee.Filter.date('2000-01-01', '2020-06-01'));

var mean_2m_air_temperature_func_2000 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2000: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2001 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2001: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2002 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2002: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2003 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2003: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2004 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2004: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2005 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2005: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2006 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2006: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2007 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2007: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2008 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2008: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2009 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2009: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2010 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2010: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2011 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2011: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2012 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2012: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2013 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2013: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2014 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2014: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2015 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2015: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2016 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2016: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2017 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2017: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2018 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2018: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2019 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2019: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2020 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2020-01-01', '2020-06-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2020: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_2000 = gef_merge.map(mean_2m_air_temperature_func_2000);
var mean_2m_air_temperature_2001 = mean_2m_air_temperature_2000.map(mean_2m_air_temperature_func_2001);
var mean_2m_air_temperature_2002 = mean_2m_air_temperature_2001.map(mean_2m_air_temperature_func_2002);
var mean_2m_air_temperature_2003 = mean_2m_air_temperature_2002.map(mean_2m_air_temperature_func_2003);
var mean_2m_air_temperature_2004 = mean_2m_air_temperature_2003.map(mean_2m_air_temperature_func_2004);
var mean_2m_air_temperature_2005 = mean_2m_air_temperature_2004.map(mean_2m_air_temperature_func_2005);
var mean_2m_air_temperature_2006 = mean_2m_air_temperature_2005.map(mean_2m_air_temperature_func_2006);
var mean_2m_air_temperature_2007 = mean_2m_air_temperature_2006.map(mean_2m_air_temperature_func_2007);
var mean_2m_air_temperature_2008 = mean_2m_air_temperature_2007.map(mean_2m_air_temperature_func_2008);
var mean_2m_air_temperature_2009 = mean_2m_air_temperature_2008.map(mean_2m_air_temperature_func_2009);
var mean_2m_air_temperature_2010 = mean_2m_air_temperature_2009.map(mean_2m_air_temperature_func_2010);
var mean_2m_air_temperature_2011 = mean_2m_air_temperature_2010.map(mean_2m_air_temperature_func_2011);
var mean_2m_air_temperature_2012 = mean_2m_air_temperature_2011.map(mean_2m_air_temperature_func_2012);
var mean_2m_air_temperature_2013 = mean_2m_air_temperature_2012.map(mean_2m_air_temperature_func_2013);
var mean_2m_air_temperature_2014 = mean_2m_air_temperature_2013.map(mean_2m_air_temperature_func_2014);
var mean_2m_air_temperature_2015 = mean_2m_air_temperature_2014.map(mean_2m_air_temperature_func_2015);
var mean_2m_air_temperature_2016 = mean_2m_air_temperature_2015.map(mean_2m_air_temperature_func_2016);
//print(mean_2m_air_temperature_2016);

Export.table.toDrive({
  collection: mean_2m_air_temperature_2016, 
  description: 'mean_2m_air_temperature_2000_2016', 
  selectors: ['GEFID', 'mean_2m_air_temperature_2000', 'mean_2m_air_temperature_2001','mean_2m_air_temperature_2002','mean_2m_air_temperature_2003',
  'mean_2m_air_temperature_2004','mean_2m_air_temperature_2005','mean_2m_air_temperature_2006','mean_2m_air_temperature_2007','mean_2m_air_temperature_2008',
  'mean_2m_air_temperature_2009','mean_2m_air_temperature_2010','mean_2m_air_temperature_2011','mean_2m_air_temperature_2012','mean_2m_air_temperature_2013',
  'mean_2m_air_temperature_2014', 'mean_2m_air_temperature_2015', 'mean_2m_air_temperature_2016'] 
});

var mean_2m_air_temperature_2017 = gef_merge.map(mean_2m_air_temperature_func_2017);
var mean_2m_air_temperature_2018 = mean_2m_air_temperature_2017.map(mean_2m_air_temperature_func_2018);
var mean_2m_air_temperature_2019 = mean_2m_air_temperature_2018.map(mean_2m_air_temperature_func_2019);
var mean_2m_air_temperature_2020 = mean_2m_air_temperature_2019.map(mean_2m_air_temperature_func_2020);
//print(mean_2m_air_temperature_2020);

Export.table.toDrive({
  collection: mean_2m_air_temperature_2020, 
  description: 'mean_2m_air_temperature_2017_2020', 
  selectors: ['GEFID', 'mean_2m_air_temperature_2017', 'mean_2m_air_temperature_2018','mean_2m_air_temperature_2019','mean_2m_air_temperature_2020'] 
});

var LST_Day_1km = ee.ImageCollection('MODIS/006/MOD11A2').select('LST_Day_1km').filter(ee.Filter.date('2000-01-01', '2021-11-09'));

var LST_Day_1km_func_2000 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2000: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2001 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2001: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2002 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2002: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2003 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2003: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2004 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2004: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2005 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2005: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2006 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2006: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2007 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2007: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2008 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2008: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2009 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2009: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2010 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2010: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2011 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2011: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2012 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2012: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2013 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2013: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2014 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2014: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2015 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2015: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2016 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2016: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2017 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2017: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2018 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2018: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2019 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2019: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2020 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2020-01-01', '2020-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2020: meanDictionary.get('LST_Day_1km')})
};

//2021-11-09

var LST_Day_1km_func_2021 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2021-01-01', '2021-11-09'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2021: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_2000 = gef_merge.map(LST_Day_1km_func_2000);
var LST_Day_1km_2001 = LST_Day_1km_2000.map(LST_Day_1km_func_2001);
var LST_Day_1km_2002 = LST_Day_1km_2001.map(LST_Day_1km_func_2002);
var LST_Day_1km_2003 = LST_Day_1km_2002.map(LST_Day_1km_func_2003);
var LST_Day_1km_2004 = LST_Day_1km_2003.map(LST_Day_1km_func_2004);
var LST_Day_1km_2005 = LST_Day_1km_2004.map(LST_Day_1km_func_2005);
var LST_Day_1km_2006 = LST_Day_1km_2005.map(LST_Day_1km_func_2006);
var LST_Day_1km_2007 = LST_Day_1km_2006.map(LST_Day_1km_func_2007);
var LST_Day_1km_2008 = LST_Day_1km_2007.map(LST_Day_1km_func_2008);
var LST_Day_1km_2009 = LST_Day_1km_2008.map(LST_Day_1km_func_2009);
var LST_Day_1km_2010 = LST_Day_1km_2009.map(LST_Day_1km_func_2010);
var LST_Day_1km_2011 = LST_Day_1km_2010.map(LST_Day_1km_func_2011);
var LST_Day_1km_2012 = LST_Day_1km_2011.map(LST_Day_1km_func_2012);
var LST_Day_1km_2013 = LST_Day_1km_2012.map(LST_Day_1km_func_2013);
var LST_Day_1km_2014 = LST_Day_1km_2013.map(LST_Day_1km_func_2014);
var LST_Day_1km_2015 = LST_Day_1km_2014.map(LST_Day_1km_func_2015);
var LST_Day_1km_2016 = LST_Day_1km_2015.map(LST_Day_1km_func_2016);
//print(LST_Day_1km_2016);
var LST_Day_1km_2017 = LST_Day_1km_2016.map(LST_Day_1km_func_2017);
var LST_Day_1km_2018 = LST_Day_1km_2017.map(LST_Day_1km_func_2018);
var LST_Day_1km_2019 = LST_Day_1km_2018.map(LST_Day_1km_func_2019);
var LST_Day_1km_2020 = LST_Day_1km_2019.map(LST_Day_1km_func_2020);
var LST_Day_1km_2021 = LST_Day_1km_2020.map(LST_Day_1km_func_2021);

//print(LST_Day_1km_2020);

Export.table.toDrive({
   collection: LST_Day_1km_2016, 
   description: 'LST_Day_1km_2000_2016', 
   selectors: ['GEFID', 'LST_Day_1km_2000', 'LST_Day_1km_2001','LST_Day_1km_2002','LST_Day_1km_2003', 'LST_Day_1km_2004','LST_Day_1km_2005','LST_Day_1km_2006','LST_Day_1km_2007','LST_Day_1km_2008', 'LST_Day_1km_2009','LST_Day_1km_2010','LST_Day_1km_2011','LST_Day_1km_2012','LST_Day_1km_2013',
   'LST_Day_1km_2014', 'LST_Day_1km_2015', 'LST_Day_1km_2016'] 
 });

Export.table.toDrive({
  collection: LST_Day_1km_2021, 
  description: 'LST_Day_1km_2017_2021', 
  selectors: ['GEFID', 'LST_Day_1km_2017', 'LST_Day_1km_2018','LST_Day_1km_2019','LST_Day_1km_2020','LST_Day_1km_2021'] 
});

var modisEVI = ee.ImageCollection('MODIS/006/MOD13Q1')
              .select('EVI')
              .map(
                      function(img) {
                        var rescaled_EVI = img.select('EVI')
                                                .multiply(0.0001)
                                                .rename('EVI_rescaled');
                        return img.addBands(rescaled_EVI);
                   
  }
);

var EVI_func_2000 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2000: meanDictionary.get('EVI_rescaled')})
};

var EVI_2000 = gef_merge.map(EVI_func_2000);

var EVI_func_2001 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2001: meanDictionary.get('EVI_rescaled')})
};


var EVI_func_2002 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2002: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2003 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2003: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2004 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2004: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2005 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2005: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2006 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2006: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2007 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2007: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2008 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2008: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2009 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2009: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2010 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2010: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2011 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2011: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2012 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2012: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2013 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2013: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2014 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2014: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2015 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2015: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2016 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2016: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2017 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2017: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2018 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2018: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2019 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2019: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2020 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2020-01-01', '2020-08-07'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2020: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2021 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2021-01-01', '2021-11-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2021: meanDictionary.get('EVI_rescaled')})
};

var EVI_2000 = gef_merge.map(EVI_func_2000);
var EVI_2001 = EVI_2000.map(EVI_func_2001);
var EVI_2002 = EVI_2001.map(EVI_func_2002);
var EVI_2003 = EVI_2002.map(EVI_func_2003);
var EVI_2004 = EVI_2003.map(EVI_func_2004);
var EVI_2005 = EVI_2004.map(EVI_func_2005);
var EVI_2006 = EVI_2005.map(EVI_func_2006);
var EVI_2007 = EVI_2006.map(EVI_func_2007);
var EVI_2008 = EVI_2007.map(EVI_func_2008);
var EVI_2009 = EVI_2008.map(EVI_func_2009);
var EVI_2010 = EVI_2009.map(EVI_func_2010);
var EVI_2011 = EVI_2010.map(EVI_func_2011);
var EVI_2012 = EVI_2011.map(EVI_func_2012);
var EVI_2013 = EVI_2012.map(EVI_func_2013);
var EVI_2014 = EVI_2013.map(EVI_func_2014);
var EVI_2015 = EVI_2014.map(EVI_func_2015);
var EVI_2016 = EVI_2015.map(EVI_func_2016);
var EVI_2017 = EVI_2016.map(EVI_func_2017);
var EVI_2018 = EVI_2017.map(EVI_func_2018);
var EVI_2019 = EVI_2018.map(EVI_func_2019);
var EVI_2020 = EVI_2019.map(EVI_func_2020);
var EVI_2021 = EVI_2020.map(EVI_func_2021);
//print(EVI_2020);

Export.table.toDrive({
  collection: EVI_2021, 
  description: 'EVI_2021', 
  selectors: ['GEFID', 'EVI_2000', 'EVI_2001', 'EVI_2002', 'EVI_2003', 'EVI_2004', 
  'EVI_2005', 'EVI_2006', 'EVI_2007', 'EVI_2008', 'EVI_2009', 'EVI_2010', 
  'EVI_2011', 'EVI_2012', 'EVI_2013', 'EVI_2014', 'EVI_2015', 'EVI_2016', 
  'EVI_2017', 'EVI_2018', 'EVI_2019', 'EVI_2020', 'EVI_2021'] 
});

var surface_pressure = ee.ImageCollection("ECMWF/ERA5/MONTHLY").select('surface_pressure').filter(ee.Filter.date('2000-01-01', '2020-06-01'));

var surface_pressure_func_2000 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2000: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2001 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2001: meanDictionary.get('surface_pressure')})
};


var surface_pressure_func_2002 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2002: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2003 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2003: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2004 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2004: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2005 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2005: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2006 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2006: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2007 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2007: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2008 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2008: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2009 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2009: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2010 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2010: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2011 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2011: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2012 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2012: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2013 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2013: meanDictionary.get('surface_pressure')})
};

var surface_pressure_func_2014 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2014: meanDictionary.get('surface_pressure')})
};


var surface_pressure_func_2015 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2015: meanDictionary.get('surface_pressure')})
};


var surface_pressure_func_2016 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2016: meanDictionary.get('surface_pressure')})
};


var surface_pressure_func_2017 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2017: meanDictionary.get('surface_pressure')})
};


var surface_pressure_func_2018 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2018: meanDictionary.get('surface_pressure')})
};


var surface_pressure_func_2019 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2019: meanDictionary.get('surface_pressure')})
};


var surface_pressure_func_2020 = function(feature) {
  var collection = ee.ImageCollection(surface_pressure.filterDate('2020-01-01', '2020-06-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({surface_pressure_2020: meanDictionary.get('surface_pressure')})
};


var surface_pressure_2000 = gef_merge.map(surface_pressure_func_2000);
var surface_pressure_2001 = surface_pressure_2000.map(surface_pressure_func_2001);
var surface_pressure_2002 = surface_pressure_2001.map(surface_pressure_func_2002);
var surface_pressure_2003 = surface_pressure_2002.map(surface_pressure_func_2003);
var surface_pressure_2004 = surface_pressure_2003.map(surface_pressure_func_2004);
var surface_pressure_2005 = surface_pressure_2004.map(surface_pressure_func_2005);
var surface_pressure_2006 = surface_pressure_2005.map(surface_pressure_func_2006);
var surface_pressure_2007 = surface_pressure_2006.map(surface_pressure_func_2007);
var surface_pressure_2008 = surface_pressure_2007.map(surface_pressure_func_2008);
var surface_pressure_2009 = surface_pressure_2008.map(surface_pressure_func_2009);
var surface_pressure_2010 = surface_pressure_2009.map(surface_pressure_func_2010);
var surface_pressure_2011 = surface_pressure_2010.map(surface_pressure_func_2011);
var surface_pressure_2012 = surface_pressure_2011.map(surface_pressure_func_2012);
var surface_pressure_2013 = surface_pressure_2012.map(surface_pressure_func_2013);
var surface_pressure_2014 = surface_pressure_2013.map(surface_pressure_func_2014);
var surface_pressure_2015 = surface_pressure_2014.map(surface_pressure_func_2015);
var surface_pressure_2016 = surface_pressure_2015.map(surface_pressure_func_2016);
var surface_pressure_2017 = surface_pressure_2016.map(surface_pressure_func_2017);
var surface_pressure_2018 = surface_pressure_2017.map(surface_pressure_func_2018);
var surface_pressure_2019 = surface_pressure_2018.map(surface_pressure_func_2019);
var surface_pressure_2020 = surface_pressure_2019.map(surface_pressure_func_2020);

Export.table.toDrive({
  collection: surface_pressure_2020, 
  description: 'surface_pressure_2020', 
  selectors: ['GEFID', 'surface_pressure_2000', 'surface_pressure_2001','surface_pressure_2002','surface_pressure_2003',
  'surface_pressure_2004','surface_pressure_2005','surface_pressure_2006','surface_pressure_2007','surface_pressure_2008',
  'surface_pressure_2009','surface_pressure_2010','surface_pressure_2011','surface_pressure_2012','surface_pressure_2013',
  'surface_pressure_2014', 'surface_pressure_2015', 'surface_pressure_2016', 'surface_pressure_2017', 'surface_pressure_2018','surface_pressure_2019','surface_pressure_2020'] 
});

var soil = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('soil');

var soil_func_2000 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2000: meanDictionary.get('soil')})
};

var soil_func_2001 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2001: meanDictionary.get('soil')})
};


var soil_func_2002 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2002: meanDictionary.get('soil')})
};

var soil_func_2003 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2003: meanDictionary.get('soil')})
};

var soil_func_2004 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2004: meanDictionary.get('soil')})
};

var soil_func_2005 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2005: meanDictionary.get('soil')})
};

var soil_func_2006 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2006: meanDictionary.get('soil')})
};

var soil_func_2007 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2007: meanDictionary.get('soil')})
};

var soil_func_2008 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2008: meanDictionary.get('soil')})
};

var soil_func_2009 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2009: meanDictionary.get('soil')})
};

var soil_func_2010 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2010: meanDictionary.get('soil')})
};

var soil_func_2011 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2011: meanDictionary.get('soil')})
};

var soil_func_2012 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2012: meanDictionary.get('soil')})
};

var soil_func_2013 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2013: meanDictionary.get('soil')})
};

var soil_func_2014 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2014: meanDictionary.get('soil')})
};


var soil_func_2015 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2015: meanDictionary.get('soil')})
};


var soil_func_2016 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2016: meanDictionary.get('soil')})
};


var soil_func_2017 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2017: meanDictionary.get('soil')})
};


var soil_func_2018 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2018: meanDictionary.get('soil')})
};


var soil_func_2019 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2019: meanDictionary.get('soil')})
};

var soil_func_2020 = function(feature) {
  var collection = ee.ImageCollection(soil.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({soil_2020: meanDictionary.get('soil')})
};


var soil_2000 = gef_merge.map(soil_func_2000);
var soil_2001 = soil_2000.map(soil_func_2001);
var soil_2002 = soil_2001.map(soil_func_2002);
var soil_2003 = soil_2002.map(soil_func_2003);
var soil_2004 = soil_2003.map(soil_func_2004);
var soil_2005 = soil_2004.map(soil_func_2005);
var soil_2006 = soil_2005.map(soil_func_2006);
var soil_2007 = soil_2006.map(soil_func_2007);
var soil_2008 = soil_2007.map(soil_func_2008);
var soil_2009 = soil_2008.map(soil_func_2009);
var soil_2010 = soil_2009.map(soil_func_2010);
var soil_2011 = soil_2010.map(soil_func_2011);
var soil_2012 = soil_2011.map(soil_func_2012);
var soil_2013 = soil_2012.map(soil_func_2013);
var soil_2014 = soil_2013.map(soil_func_2014);
var soil_2015 = soil_2014.map(soil_func_2015);
var soil_2016 = soil_2015.map(soil_func_2016);
var soil_2017 = soil_2016.map(soil_func_2017);
var soil_2018 = soil_2017.map(soil_func_2018);
var soil_2019 = soil_2018.map(soil_func_2019);
var soil_2020 = soil_2019.map(soil_func_2020);

Export.table.toDrive({
  collection: soil_2020, 
  description: 'soil_2020', 
  selectors: ['GEFID', 'soil_2000', 'soil_2001','soil_2002','soil_2003',
  'soil_2004','soil_2005','soil_2006','soil_2007','soil_2008',
  'soil_2009','soil_2010','soil_2011','soil_2012','soil_2013',
  'soil_2014', 'soil_2015', 'soil_2016', 'soil_2017', 'soil_2018','soil_2019', 'soil_2020'] 
});

var pdsi = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('pdsi');

var pdsi_func_2000 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2000: meanDictionary.get('pdsi')})
};

var pdsi_func_2001 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2001: meanDictionary.get('pdsi')})
};


var pdsi_func_2002 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2002: meanDictionary.get('pdsi')})
};

var pdsi_func_2003 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2003: meanDictionary.get('pdsi')})
};

var pdsi_func_2004 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2004: meanDictionary.get('pdsi')})
};

var pdsi_func_2005 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2005: meanDictionary.get('pdsi')})
};

var pdsi_func_2006 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2006: meanDictionary.get('pdsi')})
};

var pdsi_func_2007 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2007: meanDictionary.get('pdsi')})
};

var pdsi_func_2008 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2008: meanDictionary.get('pdsi')})
};

var pdsi_func_2009 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2009: meanDictionary.get('pdsi')})
};

var pdsi_func_2010 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2010: meanDictionary.get('pdsi')})
};

var pdsi_func_2011 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2011: meanDictionary.get('pdsi')})
};

var pdsi_func_2012 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2012: meanDictionary.get('pdsi')})
};

var pdsi_func_2013 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2013: meanDictionary.get('pdsi')})
};

var pdsi_func_2014 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2014: meanDictionary.get('pdsi')})
};


var pdsi_func_2015 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2015: meanDictionary.get('pdsi')})
};


var pdsi_func_2016 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2016: meanDictionary.get('pdsi')})
};


var pdsi_func_2017 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2017: meanDictionary.get('pdsi')})
};


var pdsi_func_2018 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2018: meanDictionary.get('pdsi')})
};


var pdsi_func_2019 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2019: meanDictionary.get('pdsi')})
};

var pdsi_func_2020 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2020: meanDictionary.get('pdsi')})
};


var pdsi_2000 = gef_merge.map(pdsi_func_2000);
var pdsi_2001 = pdsi_2000.map(pdsi_func_2001);
var pdsi_2002 = pdsi_2001.map(pdsi_func_2002);
var pdsi_2003 = pdsi_2002.map(pdsi_func_2003);
var pdsi_2004 = pdsi_2003.map(pdsi_func_2004);
var pdsi_2005 = pdsi_2004.map(pdsi_func_2005);
var pdsi_2006 = pdsi_2005.map(pdsi_func_2006);
var pdsi_2007 = pdsi_2006.map(pdsi_func_2007);
var pdsi_2008 = pdsi_2007.map(pdsi_func_2008);
var pdsi_2009 = pdsi_2008.map(pdsi_func_2009);
var pdsi_2010 = pdsi_2009.map(pdsi_func_2010);
var pdsi_2011 = pdsi_2010.map(pdsi_func_2011);
var pdsi_2012 = pdsi_2011.map(pdsi_func_2012);
var pdsi_2013 = pdsi_2012.map(pdsi_func_2013);
var pdsi_2014 = pdsi_2013.map(pdsi_func_2014);
var pdsi_2015 = pdsi_2014.map(pdsi_func_2015);
var pdsi_2016 = pdsi_2015.map(pdsi_func_2016);
var pdsi_2017 = pdsi_2016.map(pdsi_func_2017);
var pdsi_2018 = pdsi_2017.map(pdsi_func_2018);
var pdsi_2019 = pdsi_2018.map(pdsi_func_2019);
var pdsi_2020 = pdsi_2019.map(pdsi_func_2020);

Export.table.toDrive({
  collection: pdsi_2020, 
  description: 'pdsi_2020', 
  selectors: ['GEFID','pdsi_2000', 'pdsi_2001','pdsi_2002','pdsi_2003',
  'pdsi_2004','pdsi_2005','pdsi_2006','pdsi_2007','pdsi_2008',
  'pdsi_2009','pdsi_2010','pdsi_2011','pdsi_2012','pdsi_2013',
  'pdsi_2014', 'pdsi_2015', 'pdsi_2016', 'pdsi_2017', 'pdsi_2018','pdsi_2019',
  'pdsi_2020'] 
});

var aet = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('aet');

var aet_func_2000 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2000: meanDictionary.get('aet')})
};

var aet_func_2001 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2001: meanDictionary.get('aet')})
};


var aet_func_2002 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2002: meanDictionary.get('aet')})
};

var aet_func_2003 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2003: meanDictionary.get('aet')})
};

var aet_func_2004 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2004: meanDictionary.get('aet')})
};

var aet_func_2005 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2005: meanDictionary.get('aet')})
};

var aet_func_2006 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2006: meanDictionary.get('aet')})
};

var aet_func_2007 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2007: meanDictionary.get('aet')})
};

var aet_func_2008 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2008: meanDictionary.get('aet')})
};

var aet_func_2009 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2009: meanDictionary.get('aet')})
};

var aet_func_2010 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2010: meanDictionary.get('aet')})
};

var aet_func_2011 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2011: meanDictionary.get('aet')})
};

var aet_func_2012 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2012: meanDictionary.get('aet')})
};

var aet_func_2013 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2013: meanDictionary.get('aet')})
};

var aet_func_2014 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2014: meanDictionary.get('aet')})
};


var aet_func_2015 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2015: meanDictionary.get('aet')})
};


var aet_func_2016 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2016: meanDictionary.get('aet')})
};


var aet_func_2017 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2017: meanDictionary.get('aet')})
};


var aet_func_2018 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2018: meanDictionary.get('aet')})
};


var aet_func_2019 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2019: meanDictionary.get('aet')})
};

var aet_func_2020 = function(feature) {
  var collection = ee.ImageCollection(aet.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({aet_2020: meanDictionary.get('aet')})
};

var aet_2000 = gef_merge.map(aet_func_2000);
var aet_2001 = aet_2000.map(aet_func_2001);
var aet_2002 = aet_2001.map(aet_func_2002);
var aet_2003 = aet_2002.map(aet_func_2003);
var aet_2004 = aet_2003.map(aet_func_2004);
var aet_2005 = aet_2004.map(aet_func_2005);
var aet_2006 = aet_2005.map(aet_func_2006);
var aet_2007 = aet_2006.map(aet_func_2007);
var aet_2008 = aet_2007.map(aet_func_2008);
var aet_2009 = aet_2008.map(aet_func_2009);
var aet_2010 = aet_2009.map(aet_func_2010);
var aet_2011 = aet_2010.map(aet_func_2011);
var aet_2012 = aet_2011.map(aet_func_2012);
var aet_2013 = aet_2012.map(aet_func_2013);
var aet_2014 = aet_2013.map(aet_func_2014);
var aet_2015 = aet_2014.map(aet_func_2015);
var aet_2016 = aet_2015.map(aet_func_2016);
var aet_2017 = aet_2016.map(aet_func_2017);
var aet_2018 = aet_2017.map(aet_func_2018);
var aet_2019 = aet_2018.map(aet_func_2019);
var aet_2020 = aet_2019.map(aet_func_2020);

Export.table.toDrive({
  collection: aet_2020, 
  description: 'aet_2020', 
  selectors: ['GEFID', 'aet_2000', 'aet_2001','aet_2002','aet_2003',
  'aet_2004','aet_2005','aet_2006','aet_2007','aet_2008',
  'aet_2009','aet_2010','aet_2011','aet_2012','aet_2013',
  'aet_2014', 'aet_2015', 'aet_2016', 'aet_2017', 'aet_2018','aet_2019', 'aet_2020'] 
});

var ro = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('ro');

var ro_func_2000 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2000: meanDictionary.get('ro')})
};

var ro_func_2001 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2001: meanDictionary.get('ro')})
};


var ro_func_2002 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2002: meanDictionary.get('ro')})
};

var ro_func_2003 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2003: meanDictionary.get('ro')})
};

var ro_func_2004 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2004: meanDictionary.get('ro')})
};

var ro_func_2005 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2005: meanDictionary.get('ro')})
};

var ro_func_2006 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2006: meanDictionary.get('ro')})
};

var ro_func_2007 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2007: meanDictionary.get('ro')})
};

var ro_func_2008 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2008: meanDictionary.get('ro')})
};

var ro_func_2009 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2009: meanDictionary.get('ro')})
};

var ro_func_2010 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2010: meanDictionary.get('ro')})
};

var ro_func_2011 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2011: meanDictionary.get('ro')})
};

var ro_func_2012 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2012: meanDictionary.get('ro')})
};

var ro_func_2013 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2013: meanDictionary.get('ro')})
};

var ro_func_2014 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2014: meanDictionary.get('ro')})
};


var ro_func_2015 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2015: meanDictionary.get('ro')})
};


var ro_func_2016 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2016: meanDictionary.get('ro')})
};


var ro_func_2017 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2017: meanDictionary.get('ro')})
};


var ro_func_2018 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2018: meanDictionary.get('ro')})
};


var ro_func_2019 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2019: meanDictionary.get('ro')})
};

var ro_func_2020 = function(feature) {
  var collection = ee.ImageCollection(ro.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({ro_2020: meanDictionary.get('ro')})
};


var ro_2000 = gef_merge.map(ro_func_2000);
var ro_2001 = ro_2000.map(ro_func_2001);
var ro_2002 = ro_2001.map(ro_func_2002);
var ro_2003 = ro_2002.map(ro_func_2003);
var ro_2004 = ro_2003.map(ro_func_2004);
var ro_2005 = ro_2004.map(ro_func_2005);
var ro_2006 = ro_2005.map(ro_func_2006);
var ro_2007 = ro_2006.map(ro_func_2007);
var ro_2008 = ro_2007.map(ro_func_2008);
var ro_2009 = ro_2008.map(ro_func_2009);
var ro_2010 = ro_2009.map(ro_func_2010);
var ro_2011 = ro_2010.map(ro_func_2011);
var ro_2012 = ro_2011.map(ro_func_2012);
var ro_2013 = ro_2012.map(ro_func_2013);
var ro_2014 = ro_2013.map(ro_func_2014);
var ro_2015 = ro_2014.map(ro_func_2015);
var ro_2016 = ro_2015.map(ro_func_2016);
var ro_2017 = ro_2016.map(ro_func_2017);
var ro_2018 = ro_2017.map(ro_func_2018);
var ro_2019 = ro_2018.map(ro_func_2019);
var ro_2020 = ro_2019.map(ro_func_2020);

Export.table.toDrive({
  collection: ro_2020, 
  description: 'ro_2020', 
  selectors: ['GEFID', 'ro_2000', 'ro_2001','ro_2002','ro_2003',
  'ro_2004','ro_2005','ro_2006','ro_2007','ro_2008',
  'ro_2009','ro_2010','ro_2011','ro_2012','ro_2013',
  'ro_2014', 'ro_2015', 'ro_2016', 'ro_2017', 'ro_2018','ro_2019','ro_2020'] 
});

var def = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('def');

var def_func_2000 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2000: meanDictionary.get('def')})
};

var def_func_2001 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2001: meanDictionary.get('def')})
};


var def_func_2002 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2002: meanDictionary.get('def')})
};

var def_func_2003 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2003: meanDictionary.get('def')})
};

var def_func_2004 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2004: meanDictionary.get('def')})
};

var def_func_2005 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2005: meanDictionary.get('def')})
};

var def_func_2006 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2006: meanDictionary.get('def')})
};

var def_func_2007 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2007: meanDictionary.get('def')})
};

var def_func_2008 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2008: meanDictionary.get('def')})
};

var def_func_2009 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2009: meanDictionary.get('def')})
};

var def_func_2010 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2010: meanDictionary.get('def')})
};

var def_func_2011 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2011: meanDictionary.get('def')})
};

var def_func_2012 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2012: meanDictionary.get('def')})
};

var def_func_2013 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2013: meanDictionary.get('def')})
};

var def_func_2014 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2014: meanDictionary.get('def')})
};


var def_func_2015 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2015: meanDictionary.get('def')})
};


var def_func_2016 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2016: meanDictionary.get('def')})
};


var def_func_2017 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2017: meanDictionary.get('def')})
};


var def_func_2018 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2018: meanDictionary.get('def')})
};


var def_func_2019 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2019: meanDictionary.get('def')})
};

var def_func_2020 = function(feature) {
  var collection = ee.ImageCollection(def.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({def_2020: meanDictionary.get('def')})
};


var def_2000 = gef_merge.map(def_func_2000);
var def_2001 = def_2000.map(def_func_2001);
var def_2002 = def_2001.map(def_func_2002);
var def_2003 = def_2002.map(def_func_2003);
var def_2004 = def_2003.map(def_func_2004);
var def_2005 = def_2004.map(def_func_2005);
var def_2006 = def_2005.map(def_func_2006);
var def_2007 = def_2006.map(def_func_2007);
var def_2008 = def_2007.map(def_func_2008);
var def_2009 = def_2008.map(def_func_2009);
var def_2010 = def_2009.map(def_func_2010);
var def_2011 = def_2010.map(def_func_2011);
var def_2012 = def_2011.map(def_func_2012);
var def_2013 = def_2012.map(def_func_2013);
var def_2014 = def_2013.map(def_func_2014);
var def_2015 = def_2014.map(def_func_2015);
var def_2016 = def_2015.map(def_func_2016);
var def_2017 = def_2016.map(def_func_2017);
var def_2018 = def_2017.map(def_func_2018);
var def_2019 = def_2018.map(def_func_2019);
var def_2020 = def_2019.map(def_func_2020);

Export.table.toDrive({
  collection: def_2020, 
  description: 'def_2020', 
  selectors: ['GEFID', 'def_2000', 'def_2001','def_2002','def_2003',
  'def_2004','def_2005','def_2006','def_2007','def_2008',
  'def_2009','def_2010','def_2011','def_2012','def_2013',
  'def_2014', 'def_2015', 'def_2016', 'def_2017', 'def_2018','def_2019','def_2020'] 
});

var pet = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('pet');

var pet_func_2000 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2000: meanDictionary.get('pet')})
};

var pet_func_2001 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2001: meanDictionary.get('pet')})
};


var pet_func_2002 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2002: meanDictionary.get('pet')})
};

var pet_func_2003 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2003: meanDictionary.get('pet')})
};

var pet_func_2004 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2004: meanDictionary.get('pet')})
};

var pet_func_2005 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2005: meanDictionary.get('pet')})
};

var pet_func_2006 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2006: meanDictionary.get('pet')})
};

var pet_func_2007 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2007: meanDictionary.get('pet')})
};

var pet_func_2008 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2008: meanDictionary.get('pet')})
};

var pet_func_2009 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2009: meanDictionary.get('pet')})
};

var pet_func_2010 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2010: meanDictionary.get('pet')})
};

var pet_func_2011 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2011: meanDictionary.get('pet')})
};

var pet_func_2012 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2012: meanDictionary.get('pet')})
};

var pet_func_2013 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2013: meanDictionary.get('pet')})
};

var pet_func_2014 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2014: meanDictionary.get('pet')})
};


var pet_func_2015 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2015: meanDictionary.get('pet')})
};


var pet_func_2016 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2016: meanDictionary.get('pet')})
};


var pet_func_2017 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2017: meanDictionary.get('pet')})
};


var pet_func_2018 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2018: meanDictionary.get('pet')})
};


var pet_func_2019 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2019: meanDictionary.get('pet')})
};

var pet_func_2020 = function(feature) {
  var collection = ee.ImageCollection(pet.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pet_2020: meanDictionary.get('pet')})
};

var pet_2000 = gef_merge.map(pet_func_2000);
var pet_2001 = pet_2000.map(pet_func_2001);
var pet_2002 = pet_2001.map(pet_func_2002);
var pet_2003 = pet_2002.map(pet_func_2003);
var pet_2004 = pet_2003.map(pet_func_2004);
var pet_2005 = pet_2004.map(pet_func_2005);
var pet_2006 = pet_2005.map(pet_func_2006);
var pet_2007 = pet_2006.map(pet_func_2007);
var pet_2008 = pet_2007.map(pet_func_2008);
var pet_2009 = pet_2008.map(pet_func_2009);
var pet_2010 = pet_2009.map(pet_func_2010);
var pet_2011 = pet_2010.map(pet_func_2011);
var pet_2012 = pet_2011.map(pet_func_2012);
var pet_2013 = pet_2012.map(pet_func_2013);
var pet_2014 = pet_2013.map(pet_func_2014);
var pet_2015 = pet_2014.map(pet_func_2015);
var pet_2016 = pet_2015.map(pet_func_2016);
var pet_2017 = pet_2016.map(pet_func_2017);
var pet_2018 = pet_2017.map(pet_func_2018);
var pet_2019 = pet_2018.map(pet_func_2019);
var pet_2020 = pet_2019.map(pet_func_2020);

Export.table.toDrive({
  collection: pet_2020, 
  description: 'pet_2020', 
  selectors: ['GEFID', 'pet_2000', 'pet_2001','pet_2002','pet_2003',
  'pet_2004','pet_2005','pet_2006','pet_2007','pet_2008',
  'pet_2009','pet_2010','pet_2011','pet_2012','pet_2013',
  'pet_2014', 'pet_2015', 'pet_2016', 'pet_2017', 'pet_2018','pet_2019','pet_2020'] 
});

var srad = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('srad');

var srad_func_2000 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2000: meanDictionary.get('srad')})
};

var srad_func_2001 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2001: meanDictionary.get('srad')})
};


var srad_func_2002 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2002: meanDictionary.get('srad')})
};

var srad_func_2003 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2003: meanDictionary.get('srad')})
};

var srad_func_2004 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2004: meanDictionary.get('srad')})
};

var srad_func_2005 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2005: meanDictionary.get('srad')})
};

var srad_func_2006 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2006: meanDictionary.get('srad')})
};

var srad_func_2007 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2007: meanDictionary.get('srad')})
};

var srad_func_2008 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2008: meanDictionary.get('srad')})
};

var srad_func_2009 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2009: meanDictionary.get('srad')})
};

var srad_func_2010 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2010: meanDictionary.get('srad')})
};

var srad_func_2011 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2011: meanDictionary.get('srad')})
};

var srad_func_2012 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2012: meanDictionary.get('srad')})
};

var srad_func_2013 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2013: meanDictionary.get('srad')})
};

var srad_func_2014 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2014: meanDictionary.get('srad')})
};


var srad_func_2015 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2015: meanDictionary.get('srad')})
};


var srad_func_2016 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2016: meanDictionary.get('srad')})
};


var srad_func_2017 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2017: meanDictionary.get('srad')})
};


var srad_func_2018 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2018: meanDictionary.get('srad')})
};


var srad_func_2019 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2019: meanDictionary.get('srad')})
};

var srad_func_2020 = function(feature) {
  var collection = ee.ImageCollection(srad.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({srad_2020: meanDictionary.get('srad')})
};

var srad_2000 = gef_merge.map(srad_func_2000);
var srad_2001 = srad_2000.map(srad_func_2001);
var srad_2002 = srad_2001.map(srad_func_2002);
var srad_2003 = srad_2002.map(srad_func_2003);
var srad_2004 = srad_2003.map(srad_func_2004);
var srad_2005 = srad_2004.map(srad_func_2005);
var srad_2006 = srad_2005.map(srad_func_2006);
var srad_2007 = srad_2006.map(srad_func_2007);
var srad_2008 = srad_2007.map(srad_func_2008);
var srad_2009 = srad_2008.map(srad_func_2009);
var srad_2010 = srad_2009.map(srad_func_2010);
var srad_2011 = srad_2010.map(srad_func_2011);
var srad_2012 = srad_2011.map(srad_func_2012);
var srad_2013 = srad_2012.map(srad_func_2013);
var srad_2014 = srad_2013.map(srad_func_2014);
var srad_2015 = srad_2014.map(srad_func_2015);
var srad_2016 = srad_2015.map(srad_func_2016);
var srad_2017 = srad_2016.map(srad_func_2017);
var srad_2018 = srad_2017.map(srad_func_2018);
var srad_2019 = srad_2018.map(srad_func_2019);
var srad_2020 = srad_2019.map(srad_func_2020);

Export.table.toDrive({
  collection: srad_2020, 
  description: 'srad_2020', 
  selectors: ['GEFID', 'srad_2000', 'srad_2001','srad_2002','srad_2003',
  'srad_2004','srad_2005','srad_2006','srad_2007','srad_2008',
  'srad_2009','srad_2010','srad_2011','srad_2012','srad_2013',
  'srad_2014', 'srad_2015', 'srad_2016', 'srad_2017', 'srad_2018','srad_2019','srad_2020'] 
});

var swe = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('swe');

var swe_func_2000 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2000: meanDictionary.get('swe')})
};

var swe_func_2001 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2001: meanDictionary.get('swe')})
};


var swe_func_2002 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2002: meanDictionary.get('swe')})
};

var swe_func_2003 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2003: meanDictionary.get('swe')})
};

var swe_func_2004 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2004: meanDictionary.get('swe')})
};

var swe_func_2005 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2005: meanDictionary.get('swe')})
};

var swe_func_2006 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2006: meanDictionary.get('swe')})
};

var swe_func_2007 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2007: meanDictionary.get('swe')})
};

var swe_func_2008 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2008: meanDictionary.get('swe')})
};

var swe_func_2009 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2009: meanDictionary.get('swe')})
};

var swe_func_2010 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2010: meanDictionary.get('swe')})
};

var swe_func_2011 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2011: meanDictionary.get('swe')})
};

var swe_func_2012 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2012: meanDictionary.get('swe')})
};

var swe_func_2013 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2013: meanDictionary.get('swe')})
};

var swe_func_2014 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2014: meanDictionary.get('swe')})
};


var swe_func_2015 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2015: meanDictionary.get('swe')})
};


var swe_func_2016 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2016: meanDictionary.get('swe')})
};


var swe_func_2017 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2017: meanDictionary.get('swe')})
};


var swe_func_2018 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2018: meanDictionary.get('swe')})
};


var swe_func_2019 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2019: meanDictionary.get('swe')})
};

var swe_func_2020 = function(feature) {
  var collection = ee.ImageCollection(swe.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({swe_2020: meanDictionary.get('swe')})
};


var swe_2000 = gef_merge.map(swe_func_2000);
var swe_2001 = swe_2000.map(swe_func_2001);
var swe_2002 = swe_2001.map(swe_func_2002);
var swe_2003 = swe_2002.map(swe_func_2003);
var swe_2004 = swe_2003.map(swe_func_2004);
var swe_2005 = swe_2004.map(swe_func_2005);
var swe_2006 = swe_2005.map(swe_func_2006);
var swe_2007 = swe_2006.map(swe_func_2007);
var swe_2008 = swe_2007.map(swe_func_2008);
var swe_2009 = swe_2008.map(swe_func_2009);
var swe_2010 = swe_2009.map(swe_func_2010);
var swe_2011 = swe_2010.map(swe_func_2011);
var swe_2012 = swe_2011.map(swe_func_2012);
var swe_2013 = swe_2012.map(swe_func_2013);
var swe_2014 = swe_2013.map(swe_func_2014);
var swe_2015 = swe_2014.map(swe_func_2015);
var swe_2016 = swe_2015.map(swe_func_2016);
var swe_2017 = swe_2016.map(swe_func_2017);
var swe_2018 = swe_2017.map(swe_func_2018);
var swe_2019 = swe_2018.map(swe_func_2019);
var swe_2020 = swe_2019.map(swe_func_2020);

Export.table.toDrive({
  collection: swe_2020, 
  description: 'swe_2020', 
  selectors: ['GEFID', 'swe_2000', 'swe_2001','swe_2002','swe_2003',
  'swe_2004','swe_2005','swe_2006','swe_2007','swe_2008',
  'swe_2009','swe_2010','swe_2011','swe_2012','swe_2013',
  'swe_2014', 'swe_2015', 'swe_2016', 'swe_2017', 'swe_2018','swe_2019','swe_2020'] 
});

var tmmn = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('tmmn');

var tmmn_func_2000 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2000: meanDictionary.get('tmmn')})
};

var tmmn_func_2001 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2001: meanDictionary.get('tmmn')})
};


var tmmn_func_2002 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2002: meanDictionary.get('tmmn')})
};

var tmmn_func_2003 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2003: meanDictionary.get('tmmn')})
};

var tmmn_func_2004 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2004: meanDictionary.get('tmmn')})
};

var tmmn_func_2005 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2005: meanDictionary.get('tmmn')})
};

var tmmn_func_2006 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2006: meanDictionary.get('tmmn')})
};

var tmmn_func_2007 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2007: meanDictionary.get('tmmn')})
};

var tmmn_func_2008 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2008: meanDictionary.get('tmmn')})
};

var tmmn_func_2009 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2009: meanDictionary.get('tmmn')})
};

var tmmn_func_2010 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2010: meanDictionary.get('tmmn')})
};

var tmmn_func_2011 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2011: meanDictionary.get('tmmn')})
};

var tmmn_func_2012 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2012: meanDictionary.get('tmmn')})
};

var tmmn_func_2013 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2013: meanDictionary.get('tmmn')})
};

var tmmn_func_2014 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2014: meanDictionary.get('tmmn')})
};


var tmmn_func_2015 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2015: meanDictionary.get('tmmn')})
};


var tmmn_func_2016 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2016: meanDictionary.get('tmmn')})
};


var tmmn_func_2017 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2017: meanDictionary.get('tmmn')})
};


var tmmn_func_2018 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2018: meanDictionary.get('tmmn')})
};


var tmmn_func_2019 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2019: meanDictionary.get('tmmn')})
};

var tmmn_func_2020 = function(feature) {
  var collection = ee.ImageCollection(tmmn.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmn_2020: meanDictionary.get('tmmn')})
};


var tmmn_2000 = gef_merge.map(tmmn_func_2000);
var tmmn_2001 = tmmn_2000.map(tmmn_func_2001);
var tmmn_2002 = tmmn_2001.map(tmmn_func_2002);
var tmmn_2003 = tmmn_2002.map(tmmn_func_2003);
var tmmn_2004 = tmmn_2003.map(tmmn_func_2004);
var tmmn_2005 = tmmn_2004.map(tmmn_func_2005);
var tmmn_2006 = tmmn_2005.map(tmmn_func_2006);
var tmmn_2007 = tmmn_2006.map(tmmn_func_2007);
var tmmn_2008 = tmmn_2007.map(tmmn_func_2008);
var tmmn_2009 = tmmn_2008.map(tmmn_func_2009);
var tmmn_2010 = tmmn_2009.map(tmmn_func_2010);
var tmmn_2011 = tmmn_2010.map(tmmn_func_2011);
var tmmn_2012 = tmmn_2011.map(tmmn_func_2012);
var tmmn_2013 = tmmn_2012.map(tmmn_func_2013);
var tmmn_2014 = tmmn_2013.map(tmmn_func_2014);
var tmmn_2015 = tmmn_2014.map(tmmn_func_2015);
var tmmn_2016 = tmmn_2015.map(tmmn_func_2016);
var tmmn_2017 = tmmn_2016.map(tmmn_func_2017);
var tmmn_2018 = tmmn_2017.map(tmmn_func_2018);
var tmmn_2019 = tmmn_2018.map(tmmn_func_2019);
var tmmn_2020 = tmmn_2019.map(tmmn_func_2020);

Export.table.toDrive({
  collection: tmmn_2020, 
  description: 'tmmn_2020', 
  selectors: ['GEFID', 'tmmn_2000', 'tmmn_2001','tmmn_2002','tmmn_2003',
  'tmmn_2004','tmmn_2005','tmmn_2006','tmmn_2007','tmmn_2008',
  'tmmn_2009','tmmn_2010','tmmn_2011','tmmn_2012','tmmn_2013',
  'tmmn_2014', 'tmmn_2015', 'tmmn_2016', 'tmmn_2017', 'tmmn_2018','tmmn_2019', 'tmmn_2020'] 
});

var tmmx = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('tmmx');

var tmmx_func_2000 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2000: meanDictionary.get('tmmx')})
};

var tmmx_func_2001 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2001: meanDictionary.get('tmmx')})
};


var tmmx_func_2002 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2002: meanDictionary.get('tmmx')})
};

var tmmx_func_2003 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2003: meanDictionary.get('tmmx')})
};

var tmmx_func_2004 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2004: meanDictionary.get('tmmx')})
};

var tmmx_func_2005 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2005: meanDictionary.get('tmmx')})
};

var tmmx_func_2006 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2006: meanDictionary.get('tmmx')})
};

var tmmx_func_2007 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2007: meanDictionary.get('tmmx')})
};

var tmmx_func_2008 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2008: meanDictionary.get('tmmx')})
};

var tmmx_func_2009 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2009: meanDictionary.get('tmmx')})
};

var tmmx_func_2010 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2010: meanDictionary.get('tmmx')})
};

var tmmx_func_2011 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2011: meanDictionary.get('tmmx')})
};

var tmmx_func_2012 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2012: meanDictionary.get('tmmx')})
};

var tmmx_func_2013 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2013: meanDictionary.get('tmmx')})
};

var tmmx_func_2014 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2014: meanDictionary.get('tmmx')})
};


var tmmx_func_2015 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2015: meanDictionary.get('tmmx')})
};


var tmmx_func_2016 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2016: meanDictionary.get('tmmx')})
};


var tmmx_func_2017 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2017: meanDictionary.get('tmmx')})
};


var tmmx_func_2018 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2018: meanDictionary.get('tmmx')})
};


var tmmx_func_2019 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2019: meanDictionary.get('tmmx')})
};

var tmmx_func_2020 = function(feature) {
  var collection = ee.ImageCollection(tmmx.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({tmmx_2020: meanDictionary.get('tmmx')})
};



var tmmx_2000 = gef_merge.map(tmmx_func_2000);
var tmmx_2001 = tmmx_2000.map(tmmx_func_2001);
var tmmx_2002 = tmmx_2001.map(tmmx_func_2002);
var tmmx_2003 = tmmx_2002.map(tmmx_func_2003);
var tmmx_2004 = tmmx_2003.map(tmmx_func_2004);
var tmmx_2005 = tmmx_2004.map(tmmx_func_2005);
var tmmx_2006 = tmmx_2005.map(tmmx_func_2006);
var tmmx_2007 = tmmx_2006.map(tmmx_func_2007);
var tmmx_2008 = tmmx_2007.map(tmmx_func_2008);
var tmmx_2009 = tmmx_2008.map(tmmx_func_2009);
var tmmx_2010 = tmmx_2009.map(tmmx_func_2010);
var tmmx_2011 = tmmx_2010.map(tmmx_func_2011);
var tmmx_2012 = tmmx_2011.map(tmmx_func_2012);
var tmmx_2013 = tmmx_2012.map(tmmx_func_2013);
var tmmx_2014 = tmmx_2013.map(tmmx_func_2014);
var tmmx_2015 = tmmx_2014.map(tmmx_func_2015);
var tmmx_2016 = tmmx_2015.map(tmmx_func_2016);
var tmmx_2017 = tmmx_2016.map(tmmx_func_2017);
var tmmx_2018 = tmmx_2017.map(tmmx_func_2018);
var tmmx_2019 = tmmx_2018.map(tmmx_func_2019);
var tmmx_2020 = tmmx_2019.map(tmmx_func_2020);

Export.table.toDrive({
  collection: tmmx_2020, 
  description: 'tmmx_2020', 
  selectors: ['GEFID', 'tmmx_2000', 'tmmx_2001','tmmx_2002','tmmx_2003',
  'tmmx_2004','tmmx_2005','tmmx_2006','tmmx_2007','tmmx_2008',
  'tmmx_2009','tmmx_2010','tmmx_2011','tmmx_2012','tmmx_2013',
  'tmmx_2014', 'tmmx_2015', 'tmmx_2016', 'tmmx_2017', 'tmmx_2018','tmmx_2019', 'tmmx_2020'] 
});

var vap = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('vap');

var vap_func_2000 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2000: meanDictionary.get('vap')})
};

var vap_func_2001 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2001: meanDictionary.get('vap')})
};


var vap_func_2002 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2002: meanDictionary.get('vap')})
};

var vap_func_2003 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2003: meanDictionary.get('vap')})
};

var vap_func_2004 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2004: meanDictionary.get('vap')})
};

var vap_func_2005 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2005: meanDictionary.get('vap')})
};

var vap_func_2006 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2006: meanDictionary.get('vap')})
};

var vap_func_2007 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2007: meanDictionary.get('vap')})
};

var vap_func_2008 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2008: meanDictionary.get('vap')})
};

var vap_func_2009 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2009: meanDictionary.get('vap')})
};

var vap_func_2010 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2010: meanDictionary.get('vap')})
};

var vap_func_2011 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2011: meanDictionary.get('vap')})
};

var vap_func_2012 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2012: meanDictionary.get('vap')})
};

var vap_func_2013 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2013: meanDictionary.get('vap')})
};

var vap_func_2014 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2014: meanDictionary.get('vap')})
};


var vap_func_2015 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2015: meanDictionary.get('vap')})
};


var vap_func_2016 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2016: meanDictionary.get('vap')})
};


var vap_func_2017 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2017: meanDictionary.get('vap')})
};


var vap_func_2018 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2018: meanDictionary.get('vap')})
};


var vap_func_2019 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2019-01-01', '2019-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2019: meanDictionary.get('vap')})
};

var vap_func_2020 = function(feature) {
  var collection = ee.ImageCollection(vap.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vap_2020: meanDictionary.get('vap')})
};


var vap_2000 = gef_merge.map(vap_func_2000);
var vap_2001 = vap_2000.map(vap_func_2001);
var vap_2002 = vap_2001.map(vap_func_2002);
var vap_2003 = vap_2002.map(vap_func_2003);
var vap_2004 = vap_2003.map(vap_func_2004);
var vap_2005 = vap_2004.map(vap_func_2005);
var vap_2006 = vap_2005.map(vap_func_2006);
var vap_2007 = vap_2006.map(vap_func_2007);
var vap_2008 = vap_2007.map(vap_func_2008);
var vap_2009 = vap_2008.map(vap_func_2009);
var vap_2010 = vap_2009.map(vap_func_2010);
var vap_2011 = vap_2010.map(vap_func_2011);
var vap_2012 = vap_2011.map(vap_func_2012);
var vap_2013 = vap_2012.map(vap_func_2013);
var vap_2014 = vap_2013.map(vap_func_2014);
var vap_2015 = vap_2014.map(vap_func_2015);
var vap_2016 = vap_2015.map(vap_func_2016);
var vap_2017 = vap_2016.map(vap_func_2017);
var vap_2018 = vap_2017.map(vap_func_2018);
var vap_2019 = vap_2018.map(vap_func_2019);
var vap_2020 = vap_2019.map(vap_func_2020);

Export.table.toDrive({
  collection: vap_2020, 
  description: 'vap_2020', 
  selectors: ['GEFID', 'vap_2000', 'vap_2001','vap_2002','vap_2003',
  'vap_2004','vap_2005','vap_2006','vap_2007','vap_2008',
  'vap_2009','vap_2010','vap_2011','vap_2012','vap_2013',
  'vap_2014', 'vap_2015', 'vap_2016', 'vap_2017', 'vap_2018','vap_2019', 'vap_2020'] 
});

var vpd = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('vpd');

var vpd_func_2000 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2000: meanDictionary.get('vpd')})
};

var vpd_func_2001 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2001: meanDictionary.get('vpd')})
};


var vpd_func_2002 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2002: meanDictionary.get('vpd')})
};

var vpd_func_2003 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2003: meanDictionary.get('vpd')})
};

var vpd_func_2004 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2004: meanDictionary.get('vpd')})
};

var vpd_func_2005 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2005: meanDictionary.get('vpd')})
};

var vpd_func_2006 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2006: meanDictionary.get('vpd')})
};

var vpd_func_2007 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2007: meanDictionary.get('vpd')})
};

var vpd_func_2008 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2008: meanDictionary.get('vpd')})
};

var vpd_func_2009 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2009: meanDictionary.get('vpd')})
};

var vpd_func_2010 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2010: meanDictionary.get('vpd')})
};

var vpd_func_2011 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2011: meanDictionary.get('vpd')})
};

var vpd_func_2012 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2012: meanDictionary.get('vpd')})
};

var vpd_func_2013 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2013: meanDictionary.get('vpd')})
};

var vpd_func_2014 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2014: meanDictionary.get('vpd')})
};


var vpd_func_2015 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2015: meanDictionary.get('vpd')})
};


var vpd_func_2016 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2016: meanDictionary.get('vpd')})
};


var vpd_func_2017 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2017: meanDictionary.get('vpd')})
};


var vpd_func_2018 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2018: meanDictionary.get('vpd')})
};


var vpd_func_2019 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2019-01-01', '2019-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2019: meanDictionary.get('vpd')})
};

var vpd_func_2020 = function(feature) {
  var collection = ee.ImageCollection(vpd.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vpd_2020: meanDictionary.get('vpd')})
};


var vpd_2000 = gef_merge.map(vpd_func_2000);
var vpd_2001 = vpd_2000.map(vpd_func_2001);
var vpd_2002 = vpd_2001.map(vpd_func_2002);
var vpd_2003 = vpd_2002.map(vpd_func_2003);
var vpd_2004 = vpd_2003.map(vpd_func_2004);
var vpd_2005 = vpd_2004.map(vpd_func_2005);
var vpd_2006 = vpd_2005.map(vpd_func_2006);
var vpd_2007 = vpd_2006.map(vpd_func_2007);
var vpd_2008 = vpd_2007.map(vpd_func_2008);
var vpd_2009 = vpd_2008.map(vpd_func_2009);
var vpd_2010 = vpd_2009.map(vpd_func_2010);
var vpd_2011 = vpd_2010.map(vpd_func_2011);
var vpd_2012 = vpd_2011.map(vpd_func_2012);
var vpd_2013 = vpd_2012.map(vpd_func_2013);
var vpd_2014 = vpd_2013.map(vpd_func_2014);
var vpd_2015 = vpd_2014.map(vpd_func_2015);
var vpd_2016 = vpd_2015.map(vpd_func_2016);
var vpd_2017 = vpd_2016.map(vpd_func_2017);
var vpd_2018 = vpd_2017.map(vpd_func_2018);
var vpd_2019 = vpd_2018.map(vpd_func_2019);
var vpd_2020 = vpd_2019.map(vpd_func_2020);


Export.table.toDrive({
  collection: vpd_2020, 
  description: 'vpd_2020', 
  selectors: ['GEFID', 'vpd_2000', 'vpd_2001','vpd_2002','vpd_2003',
  'vpd_2004','vpd_2005','vpd_2006','vpd_2007','vpd_2008',
  'vpd_2009','vpd_2010','vpd_2011','vpd_2012','vpd_2013',
  'vpd_2014', 'vpd_2015', 'vpd_2016', 'vpd_2017', 'vpd_2018','vpd_2019', 'vpd_2020'] 
});

var vs = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2020-12-01')).select('vs');

var vs_func_2000 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2000: meanDictionary.get('vs')})
};

var vs_func_2001 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2001: meanDictionary.get('vs')})
};


var vs_func_2002 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2002: meanDictionary.get('vs')})
};

var vs_func_2003 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2003: meanDictionary.get('vs')})
};

var vs_func_2004 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2004: meanDictionary.get('vs')})
};

var vs_func_2005 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2005: meanDictionary.get('vs')})
};

var vs_func_2006 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2006: meanDictionary.get('vs')})
};

var vs_func_2007 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2007: meanDictionary.get('vs')})
};

var vs_func_2008 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2008: meanDictionary.get('vs')})
};

var vs_func_2009 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2009: meanDictionary.get('vs')})
};

var vs_func_2010 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2010: meanDictionary.get('vs')})
};

var vs_func_2011 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2011: meanDictionary.get('vs')})
};

var vs_func_2012 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2012: meanDictionary.get('vs')})
};

var vs_func_2013 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2013: meanDictionary.get('vs')})
};

var vs_func_2014 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2014: meanDictionary.get('vs')})
};


var vs_func_2015 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2015: meanDictionary.get('vs')})
};


var vs_func_2016 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2016: meanDictionary.get('vs')})
};


var vs_func_2017 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2017: meanDictionary.get('vs')})
};


var vs_func_2018 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2018: meanDictionary.get('vs')})
};


var vs_func_2019 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2019: meanDictionary.get('vs')})
};

var vs_func_2020 = function(feature) {
  var collection = ee.ImageCollection(vs.filterDate('2020-01-01', '2020-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({vs_2020: meanDictionary.get('vs')})
};

var vs_2000 = gef_merge.map(vs_func_2000);
var vs_2001 = vs_2000.map(vs_func_2001);
var vs_2002 = vs_2001.map(vs_func_2002);
var vs_2003 = vs_2002.map(vs_func_2003);
var vs_2004 = vs_2003.map(vs_func_2004);
var vs_2005 = vs_2004.map(vs_func_2005);
var vs_2006 = vs_2005.map(vs_func_2006);
var vs_2007 = vs_2006.map(vs_func_2007);
var vs_2008 = vs_2007.map(vs_func_2008);
var vs_2009 = vs_2008.map(vs_func_2009);
var vs_2010 = vs_2009.map(vs_func_2010);
var vs_2011 = vs_2010.map(vs_func_2011);
var vs_2012 = vs_2011.map(vs_func_2012);
var vs_2013 = vs_2012.map(vs_func_2013);
var vs_2014 = vs_2013.map(vs_func_2014);
var vs_2015 = vs_2014.map(vs_func_2015);
var vs_2016 = vs_2015.map(vs_func_2016);
var vs_2017 = vs_2016.map(vs_func_2017);
var vs_2018 = vs_2017.map(vs_func_2018);
var vs_2019 = vs_2018.map(vs_func_2019);
var vs_2020 = vs_2019.map(vs_func_2020);

Export.table.toDrive({
  collection: vs_2020, 
  description: 'vs_2020', 
  selectors: ['GEFID', 'vs_2000', 'vs_2001','vs_2002','vs_2003',
  'vs_2004','vs_2005','vs_2006','vs_2007','vs_2008',
  'vs_2009','vs_2010','vs_2011','vs_2012','vs_2013',
  'vs_2014', 'vs_2015', 'vs_2016', 'vs_2017', 'vs_2018','vs_2019', 'vs_2020'] 
});

// Get the forest loss image.
var gfc2014 = ee.Image("UMD/hansen/global_forest_change_2020_v1_8");

var stats12_func = function(feature) {
  var lossImage = gfc2014.select(['lossyear']).eq(12);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e30
  });
  return feature.set({loss_12: stats.get('lossyear')})
};

var stats13_func = function(feature) {
  var lossImage = gfc2014.select(['lossyear']).eq(13);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e30
  });
  return feature.set({loss_13: stats.get('lossyear')})
};

var stats14_func = function(feature) {
  var lossImage = gfc2014.select(['lossyear']).eq(14);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e30
  });
  return feature.set({loss_14: stats.get('lossyear')})
};

var stats15_func = function(feature) {
  var lossImage = gfc2014.select(['lossyear']).eq(15);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e30
  });
  return feature.set({loss_15: stats.get('lossyear')})
};

var stats16_func = function(feature) {
  var lossImage = gfc2014.select(['lossyear']).eq(16);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e30
  });
  return feature.set({loss_16: stats.get('lossyear')})
};

var stats17_func = function(feature) {
  var lossImage = gfc2014.select(['lossyear']).eq(17);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e30
  });
  return feature.set({loss_17: stats.get('lossyear')})
};

var stats18_func = function(feature) {
  var lossImage = gfc2014.select(['lossyear']).eq(18);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e30
  });
  return feature.set({loss_18: stats.get('lossyear')})
};

var stats19_func = function(feature) {
  var lossImage = gfc2014.select(['lossyear']).eq(19);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e30
  });
  return feature.set({loss_19: stats.get('lossyear')})
};

var stats20_func = function(feature) {
  var lossImage = gfc2014.select(['lossyear']).eq(20);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e30
  });
  return feature.set({loss_20: stats.get('lossyear')})
};

var getstats12 = gef_merge.map(stats12_func);
var getstats13 = getstats12.map(stats13_func);
var getstats14 = getstats13.map(stats14_func);
var getstats15 = getstats14.map(stats15_func);
var getstats16 = getstats15.map(stats16_func);
var getstats17 = getstats16.map(stats17_func);
var getstats18 = getstats17.map(stats18_func);
var getstats19 = getstats18.map(stats19_func);
var getstats20 = getstats19.map(stats20_func);

Export.table.toDrive({
  collection: getstats20,
  description: 'getstats20',
  selectors: ['GEFID', 'loss_12', 'loss_13', 'loss_14', 'loss_15',
  'loss_16', 'loss_17', 'loss_18', 'loss_19','loss_20']
});

var treecover2000_func = function(feature) {
  var lossImage = gfc2014.select(['treecover2000']);
  var stats = lossImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e10
  });
  return feature.set({treecover2000: stats.get('treecover2000')})
};

var gettreecover2000 = gef_merge.map(treecover2000_func);

Export.table.toDrive({
  collection: gettreecover2000,
  description: 'gettreecover2000',
  selectors: ['GEFID', 'treecover2000']
});
